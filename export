import { createComponentFactory, Spectator } from '@ngneat/spectator/jest';
import { MyComponent } from './my.component';
import { of } from 'rxjs';
import { provideMockStore } from '@ngrx/store/testing';
import { CorporateOutstandingStoreFacade } from '.../corporate-outstanding.store.facade';
import { MockComponent, MockPipe, MockDirective } from 'ng-mocks';

// Mock du facade
class MockCorporateOutstandingStoreFacade {
  readonly data$ = of([]);
  dispatch = jest.fn();
}

// Mock des sélecteurs NgRx
const mockSelectors = [
  {
    selector: corporateOutstandingSelector.selectSomeValue,
    value: [],
  },
];

describe('MyComponent', () => {
  let spectator: Spectator<MyComponent>;
  const createComponent = createComponentFactory({
    component: MyComponent,
    providers: [
      { provide: CorporateOutstandingStoreFacade, useClass: MockCorporateOutstandingStoreFacade },
      provideMockStore({ selectors: mockSelectors }),
    ],
    declarations: [
      // Composants utilisés dans le template de MyComponent
      MockComponent(BorrowerOutstandingComponent),
      MockComponent(BorrowerOutstandingListComponent),
      MockComponent(BorrowerOutstandingDealListComponent),
      MockComponent(ManageEditProductModalComponent),

      // Pipes
      MockPipe(CustomDatePipe),
      MockPipe(TenorPipe),
      MockPipe(AmountPipe),

      // Directives
      MockDirective(PermissionCheckDirective),
      MockDirective(FeatureToggleCheckDirective),
    ],
    imports: [
      // Ce que MyComponent a *vraiment* besoin
      FormsModule,
      TranslateModule.forRoot(), // ou MockModule(TranslateModule)
      NgbModule, // ou MockModule(NgbModule) si utilisé dans le template
    ],
  });

  beforeEach(() => {
    spectator = createComponent();
  });

  it('should work', () => {
    expect(spectator.component).toBeDefined();
  });
});